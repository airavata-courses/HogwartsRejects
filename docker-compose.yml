version: '3.7'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"
    networks: 
      - ads_network
    hostname: zookeeper

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    container_name: kafka_standalone
    ports:
      - "9092:9092"
    hostname: kafka
    networks: 
      - ads_network
    environment:
      KAFKA_CREATE_TOPICS: "SessionManagement:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: kafka # docker-machine ip
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - "zookeeper"
  
  # user-management:
  #   build: './UserManagement'
  #   ports:
  #     - "3000:3000"
  #   depends_on: 
  #     - postgres_standalone
  #   networks: 
  #     - ads_network
  
  session-management:
    build: './SessionManagement'
    depends_on: 
      - mongo_standalone
    networks: 
      - ads_network

  # postgres_standalone:
  #   image: postgres
  #   ports:
  #     - "5432:5432"
  #   volumes: 
  #     - db_data:/var/lib/postgressql/data
  #   networks: 
  #     - ads_network
  #   environment: 
  #     - POSTGRES_PASSWORD=shresta
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_DB=postgres

  mongo_standalone:
    image: mongo
    networks: 
      - ads_network
    ports:
      - 27017:27017
    volumes:
      - db_data:/data/db
      - db_data:/data/bkp

volumes: 
  db_data:
networks: 
  ads_network: